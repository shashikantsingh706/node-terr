name: Deploy to Amazon ECS
on:
  pull_request:
    branches:
      - master
env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: app_cluster
  CONTAINER_NAME: app
  ECS_SERVICE: app_service
  ECS_TD: .github/workflows/td.json

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id:  ${{secrets.AWS_USER_KEY}}
          aws-secret-access-key:  ${{secrets.AWS_USER_SECRET_KEY}}
          aws-region: "us-east-1"
      
      - name: Configure AWS profile
        uses: Fooji/create-aws-profile-action@v1
        with:
          profile: default
          region: us-east-1
          key:  ${{secrets.AWS_USER_KEY}}
          secret:  ${{secrets.AWS_USER_SECRET_KEY}}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: "891377310564.dkr.ecr.us-east-2.amazonaws.com"
          ECR_REPOSITORY: "app_repo"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  terraform:
    name: Verify terraform
    runs-on: ubuntu_latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "AKIA47CR2LO7A47DUPG6"
          aws-secret-access-key: "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"
          aws-region: "us-east-1"

      - name: verifciation of terraform code
        run: |
           cd terraform
           terraform fmt
           terraform init
           terraform plan
           